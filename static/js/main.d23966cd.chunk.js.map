{"version":3,"sources":["line/line.js","components/Benchmark/utils.js","components/Comparision/Comparision.js","components/Result/Result.js","components/Benchmark/Benchmark.js","line/utils.js","components/ControlPanel/ControlPanel.js","App.js","index.js"],"names":["findLine","arr","sorted","slice","sort","a","b","arrLength","length","isOdd","sliceLength","leftSlice","reverse","rightSlice","oddElement","center","isOddMatchCenter","res","map","elem","index","Math","abs","every","result","sourceName","findLine2","bench","f","inRow","loops","results","start","Date","now","i","apply","arguments","push","time","createItems","functions","args","printToConsole","items","name","func","count","date","serial","run","cb","this","print","console","log","repeat","getAverage","sum","done","max","min","persent","parseInt","average","printDone","printStart","iteration","toLocaleString","forEach","item","createDataSet","labels","Array","from","e","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","data","parseParams","params","split","id","type","getMax","getMin","getPersent","reduce","Comparision","averages","marked","best","normal","warn","percent","mark","setLevelMark","Segment","Message","color","key","Result","useState","open","setOpen","Accordion","Title","active","onClick","Icon","Content","Benchmark","delay","disable","onStart","onEnd","inProgress","state","setState","useEffect","handleOnStart","setResult","prevState","handleOnEnd","settings","startBench","setTimeout","Button","loading","disabled","width","height","getRandom","floor","random","mirrorArr","ControlPanel","initialArgs","schema","schemaValidator","onChangeFunctions","onValidArgs","onArgsChange","onChange","fnOptions","fn","text","value","handleChangeInput","target","Number","symetricLength","setSymetricLength","asymetricLength","setASymetricLength","argsArray","setArgsArra","arrayError","setArrayError","funsIds","setFunsIds","validate","validateSync","valid","error","message","handleGenArrChange","Error","halfLength","half","_","edgeElement","lastHalf","getSymmetricArr","getAsymmetricArr","Header","as","Form","Group","widths","Field","Input","Checkbox","bind","checked","Dropdown","d","ids","placeholder","fluid","multiple","selection","options","className","v","trim","isNaN","join","negative","initialArguments","schemaValidators","yup","of","integer","functionsOptions","App","Object","keys","panelState","setPanelState","validArgs","appState","setAppState","Container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d23966cd.chunk.js","sourcesContent":["// import { getAsymmetricArr, getSymmetricArr } from \"./utils\";\n\n// const sourceSimetredEven = [5, -5, 10, -10];\n// const sourceSimetredOdd = [-10, -5, 0, 5, 10];\n// const sourceNotSimetredEven = [-10, -5, 5, 11];\n// const sourceNotSimetredOdd = [22, -10, -5, 0, 5, 11, 13];\n\nexport const findLine = (arr = []) => {\n  const sorted = arr.slice().sort((a, b) => a - b);\n  const arrLength = sorted.length;\n  const isOdd = arrLength % 2 !== 0;\n  // console.log(\"sorted\", sorted);\n  const sliceLength = isOdd ? (arrLength - 1) / 2 : arrLength / 2;\n  const leftSlice = sorted.slice(0, sliceLength).reverse();\n  const rightSlice = sorted.slice(isOdd ? sliceLength + 1 : sliceLength);\n  const oddElement = isOdd ? sorted[sliceLength] : null;\n  const center = (rightSlice[0] - leftSlice[0]) / 2 + leftSlice[0];\n  const isOddMatchCenter = oddElement === center;\n  \n  const res = rightSlice\n  .map((elem, index) => {\n    return Math.abs(center - elem) === Math.abs(leftSlice[index] - center);\n  })\n  .every(elem => !!elem);\n  \n  // console.log(\"leftSlice\", leftSlice);\n  // console.log(\"rightSlice\", rightSlice);\n  // console.log(\"oddElement\", oddElement);\n  // console.log(\"center\", center);\n  // console.log(\"res\", res);\n  // console.log(\"===\".repeat(20));\n\n  // const res = res.every(elem => !!elem)\n  const result = isOdd ? (isOddMatchCenter ? res : false) : res;\n\n  return {\n    center,\n    isOdd,\n    oddElement,\n    isOddMatchCenter: isOdd ? isOddMatchCenter : null,\n    result,\n    arr\n  };\n};\n\nfindLine.sourceName = 'findLine'\n\nexport const findLine2 = (arr = []) => {\n  const sorted = arr.slice().sort((a, b) => a - b);\n  const arrLength = sorted.length;\n  const isOdd = arrLength % 2 !== 0;\n  // console.log(\"sorted\", sorted);\n  const sliceLength = isOdd ? (arrLength - 1) / 2 : arrLength / 2;\n  const leftSlice = sorted.slice(0, sliceLength).reverse();\n  const rightSlice = sorted.slice(isOdd ? sliceLength + 1 : sliceLength);\n  const oddElement = isOdd ? sorted[sliceLength] : null;\n  const center = (rightSlice[0] - leftSlice[0]) / 2 + leftSlice[0];\n  const isOddMatchCenter = oddElement === center;\n  \n  const res = rightSlice\n  .map((elem, index) => {\n    return Math.abs(center - elem) === Math.abs(leftSlice[index] - center);\n  })\n  .every(elem => !!elem);\n  \n  // console.log(\"leftSlice\", leftSlice);\n  // console.log(\"rightSlice\", rightSlice);\n  // console.log(\"oddElement\", oddElement);\n  // console.log(\"center\", center);\n  // console.log(\"res\", res);\n  // console.log(\"===\".repeat(20));\n\n  // const res = res.every(elem => !!elem)\n  const result = isOdd ? (isOddMatchCenter ? res : false) : res;\n\n  return {\n    center,\n    isOdd,\n    oddElement,\n    isOddMatchCenter: isOdd ? isOddMatchCenter : null,\n    result,\n    arr\n  };\n};\n\nfindLine2.sourceName = 'findLine2'\n\n// console.log(findLine([-6, 0, 4, 8, 14]));\n// console.log(findLine([1, 2, 4]));\n// console.log(findLine([-2, 7, 16]));\n\n// console.log(\"===\".repeat(20));\n// console.log('Symmetric');\n\n// console.log(findLine(getSymmetricArr(7).result));\n// console.log(findLine(getSymmetricArr(3).result));\n// console.log(findLine(getSymmetricArr(10).result));\n// console.log(findLine(getSymmetricArr(4).result));\n// console.log(findLine(getSymmetricArr(16).result));\n// console.log(findLine(getSymmetricArr(25).result));\n\n// console.log(\"===\".repeat(20));\n// console.log('Asymmetric');\n// console.log(getAsymmetricArr());\n\n\n// console.log(findLine(getAsymmetricArr(7)));\n// console.log(findLine(getAsymmetricArr(3)));\n// console.log(findLine(getAsymmetricArr(10)));\n// console.log(findLine(getAsymmetricArr(4)));\n// console.log(findLine(getAsymmetricArr(16)));\n// console.log(findLine(getAsymmetricArr(25)));\n\n","export function bench(f, inRow, loops) {\n  return function () {\n    const results = []\n    const start = Date.now();\n\n    for (let i = 0; i < loops; i++) {\n      for (let i = 0; i < inRow; i++) {\n        const result = f.apply(null, arguments[0]);\n        results.push(result)\n      }\n    }\n\n    return {\n      results,\n      time: Date.now() - start\n    };\n  }\n}\n\nexport function createItems(\n  functions,\n  inRow,\n  loops,\n  args,\n  printToConsole = false\n) {\n  const items = []\n  for (let i = 0; i < functions.length; i++) {\n    // console.log('fun',functions[i].sourceName )\n    items.push({\n      name: functions[i].sourceName,\n      func: bench(functions[i], inRow, loops),\n      time: 0,\n      count: [],\n      date: [],\n      results: [],\n      serial: i,\n      run: function (cb) {\n        const { time, results } = this.func(args)\n\n        this.time = time;\n        this.count.push(time)\n        this.date.push(Date.now())\n        this.results = results\n        printToConsole && this.print();\n        cb && cb({\n          time,\n          name: this.name,\n          results\n        })\n      },\n      print: function () {\n        console.log(`Function \"${this.name}\" - time: ${this.time} ms`);\n        console.log('Results: ', this.results)\n        console.log('- - '.repeat(15))\n      },\n      getAverage: function () {\n        let sum = 0;\n\n        for (let i = 0; i < this.count.length; i++) {\n          sum += this.count[i];\n        }\n\n        return sum / this.count.length;\n      },\n      done: function () {\n        const max = Math.max(...this.count)\n        const min = Math.min(...this.count)\n        const persent = parseInt(100 - (min / max * 100))\n        return {\n          max,\n          min,\n          average: this.getAverage(),\n          persent\n        }\n      },\n      printDone: function () {\n        let done = this.done();\n\n        console.log(this.name\n          + \" = max time \" + done.max\n          + \" / mim time \" + done.min\n          + \" / average \" + done.average\n          + \" / persent \" + done.persent\n        )\n      },\n    });\n  }\n\n  return items\n}\n\nexport const printStart = (inRow, loops, iteration) => {\n  console.log('='.repeat(30))\n  console.log(`Start Benchmark ${new Date().toLocaleString()}`)\n  console.log(`Settings: inRow - ${inRow}, loops - ${loops}, iteration - ${iteration}`)\n  console.log('='.repeat(30))\n}\n\nexport const printDone = (items) => {\n  console.log('='.repeat(30))\n  console.log(`End Benchmark ${new Date().toLocaleString()}`);\n  console.log('='.repeat(30))\n  items.forEach((item) => item.printDone());\n}\n\nexport const createDataSet = items => {\n  return items.map(item => ({\n    labels: Array.from({ length: item.count.length }).map((e, i) => i + 1),\n    datasets: [\n      {\n        label: item.name,\n        backgroundColor: 'rgba(255,99,132,0.2)',\n        borderColor: 'rgba(255,99,132,1)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n        hoverBorderColor: 'rgba(255,99,132,1)',\n        data: item.count\n      }\n    ],\n    item\n  }))\n}\n\nexport const parseParams = params => {\n  const [id, type] = params.split(':')\n  return { id, type }\n}\n\nexport const getMax = arr => Math.max(...arr)\n\nexport const getMin = arr => Math.min(...arr)\n\nexport const getPersent = arr => parseInt(100 - (getMin(arr) / getMax(arr) * 100))\n\nexport const getAverage = arr => parseInt(arr.reduce((a, b) => a + b, 0) / arr.length)","import { Message, Segment } from 'semantic-ui-react'\nimport { getAverage, getMin, getPersent } from '../Benchmark/utils'\n\nimport React from 'react'\n\nconst setLevelMark = (items, best, {\n  normal,\n  warn,\n} = {\n    normal: 3,\n    warn: 10,\n  }) => {\n  console.log('best', best)\n  return items.map(item => {\n    const { average } = item\n    const percent = getPersent([average, best])\n    console.log('percent', percent)\n    const mark = average === best ? 'green' :\n      (average > best && percent <= normal) ? 'olive' :\n        (percent > normal && percent <= warn) ? 'yellow' : 'red'\n    return {\n      ...item,\n      mark,\n      percent\n    }\n  })\n}\n\nconst Comparision = ({ result }) => {\n  result = result.map(res => ({\n    ...res,\n    average: getAverage(res.item.count)\n  }))\n\n  const averages = result.map(res => res.average)\n  const bestTime = getMin(averages)\n  const marked = setLevelMark(result, bestTime)\n\n  return (\n    <Segment>\n      {marked.slice().sort((a, b) => a.average - b.average).map((res, i) =>\n        <Message color={res.mark} key={i}>\n          {res.item.name} <b>{res.average} ms</b>\n          {' '}\n          {!!res.percent && <b>(+{res.percent}%)</b>}\n        </Message>\n      )}\n    </Segment>\n  )\n}\n\nexport default Comparision\n","import { Accordion, Icon } from 'semantic-ui-react'\nimport React, { useState } from 'react'\nimport { getAverage, getMax, getMin, getPersent } from '../Benchmark/utils'\n\nconst Result = ({ item }) => {\n  const [open, setOpen] = useState(false)\n  const max = getMax(item.count)\n  const min = getMin(item.count)\n  const persent = getPersent(item.count)\n  const average = getAverage(item.count)\n  return (\n    <div>\n      <Accordion>\n        <Accordion.Title\n          active={open}\n          index={0}\n          onClick={() => setOpen(open => !open)}\n        >\n          <Icon name='dropdown' />\n          Show details\n        </Accordion.Title>\n        <Accordion.Content active={open}>\n          <p>\n            Max time: {max} <br />\n            Min time: {min} <br />\n            Average time: {average} <br />\n            Persent: {persent}\n          </p>\n        </Accordion.Content>\n      </Accordion>\n    </div>\n  )\n}\n\nexport default Result\n","import './Benchmark.css'\n\nimport { Button, Message } from 'semantic-ui-react'\nimport React, { useEffect, useState } from 'react'\nimport { createDataSet, createItems, printDone, printStart } from './utils'\n\nimport { Bar } from 'react-chartjs-2'\nimport Comparision from '../Comparision/Comparision'\nimport Result from '../Result/Result'\n\nconst Benchmark = ({\n  args,\n  delay = 500,\n  functions,\n  inRow = 1000,\n  iteration = 1,\n  loops = 100,\n  printToConsole = false,\n  disable,\n  onStart = () => { },\n  onEnd = () => { }\n} = {}) => {\n\n  const [state, setState] = useState({\n    inProgress: false,\n    result: null\n  })\n\n  const { inProgress, result } = state\n\n  useEffect(() => {\n    result && console.log('result', result)\n  }, [result])\n\n  const items = createItems(\n    functions,\n    inRow,\n    loops,\n    args,\n    printToConsole\n  )\n\n  const handleOnStart = () => {\n    onStart()\n    setResult(null)\n    printToConsole && printStart(inRow, loops, iteration)\n    setState(prevState => {\n      return {\n        ...prevState,\n        inProgress: true,\n      };\n    });\n  }\n\n  const handleOnEnd = () => {\n    onEnd({\n      items: items.map(item => ({\n        ...item,\n        settings: {\n          args,\n          delay,\n          inRow,\n          iteration,\n          loops,\n          printToConsole\n        }\n      }))\n    })\n    printToConsole && printDone(items)\n    setState(prevState => {\n      return {\n        ...prevState,\n        inProgress: false,\n        result: createDataSet(items)\n      };\n    });\n  }\n\n  const setResult = result => {\n    setState(prevState => ({\n      ...prevState,\n      result\n    }))\n  }\n\n  const start = () => {\n    for (let i = 0; i < items.length; i++) {\n      items[i].run();\n    }\n  }\n\n  const startBench = () => {\n    handleOnStart()\n\n    setTimeout(start, 0);\n\n    setTimeout(() => {\n      if (iteration > 1) {\n        iteration--;\n        setTimeout(function time() {\n          start();\n          iteration--;\n          if (iteration > 0) {\n            setTimeout(time, delay)\n          } else {\n            handleOnEnd()\n          }\n        }, delay);\n      } else {\n        handleOnEnd()\n      }\n    }, 100)\n  }\n\n  return (\n    <div>\n      <div>\n        <Button\n          loading={inProgress}\n          disabled={inProgress || disable}\n          onClick={startBench}\n        >Start</Button>\n\n        {result &&\n          result.map((data, i) =>\n            <div key={i}>\n              <Bar\n                data={data}\n                width={100}\n                height={50}\n              />\n              <Message>\n                <Result item={data.item}/>\n              </Message>\n            </div>\n          )}\n\n        {result && result.length > 1 && <Comparision result={result}/>}\n\n        {!result && !inProgress &&\n          <Message>\n            <p>\n              No result yet.\n            </p>\n          </Message>}\n      </div>\n    </div>\n  )\n}\n\nexport default Benchmark\n","export const getRandom = (min, max) =>\n  min + Math.floor(Math.random() * (max + 1 - min));\n\nexport const mirrorArr = (arr, center) => {\n  return arr\n    .slice()\n    .reverse()\n    .map(elem => {\n      const step = center - elem;\n      // console.log(\"step\", step);\n      return center + step;\n    });\n};\n\nexport const getSymmetricArr = (length = 10, { min = -50, max = 50 } = {}) => {\n  if (length > 100) {\n    throw new Error(\"Length must be less or equal to 100\");\n  }\n\n  const isOdd = length % 2 !== 0;\n  const halfLength = isOdd ? (length - 1) / 2 : length / 2;\n  // const half = [-32, -25, -23, -7, -2];\n  const half = Array.from({ length: halfLength })\n    .map(_ => getRandom(min, max / 2))\n    .sort((a, b) => a - b);\n  const edgeElement = half[halfLength - 1];\n  const center = getRandom(edgeElement + 1, edgeElement + 9);\n  const lastHalf = mirrorArr(half, center);\n  const result = [...half, ...(isOdd ? [center] : []), ...lastHalf];\n\n  // console.log(\"half\", half);\n  // console.log(\"center\", center);\n  // console.log(\"lastHalf\", lastHalf);\n  return {\n    result,\n    center\n  };\n};\n\nexport const getAsymmetricArr = (length =10, { min = -50, max = 50 } ={}) => \n  Array.from({length}).map(_ => getRandom(min, max))\n","import * as yup from 'yup'\n\nimport { Button, Checkbox, Dropdown, Form, Header, Input, Message } from 'semantic-ui-react'\nimport React, { useEffect, useState } from 'react'\nimport { getAsymmetricArr, getSymmetricArr } from '../../line/utils'\n\nconst createFunOptions = funs =>\n  funs.map(fn => ({\n    key: fn.id, text: fn.name, value: `${fn.id}:${fn.type}`\n  }))\n\n// const schema = yup.array()\n//   .of(yup.number().min(-100).max(100).integer())\n\nconst ControlPanel = ({\n  state: {\n    delay,\n    inRow,\n    loops,\n    iteration,\n    printToConsole,\n    disabled,\n    initialArgs,\n    functions,\n    schemaValidator: schema\n  },\n  onChangeFunctions,\n  onValidArgs,\n  onArgsChange,\n  onChange\n}) => {\n  const fnOptions = createFunOptions(functions)\n  const handleChangeInput = ({ target: { name, value } }) => {\n    onChange(name, Number(value))\n  }\n\n  const handleChangeCheckbox = (name, value) => {\n    onChange(name, value)\n  }\n\n  const [symetricLength, setSymetricLength] = useState(10)\n  const [asymetricLength, setASymetricLength] = useState(10)\n  const [argsArray, setArgsArra] = useState(initialArgs)\n  const [arrayError, setArrayError] = useState('')\n  const [funsIds, setFunsIds] = useState([])\n\n  const handleSymetricLength = ({ target: { value } }) => {\n    setSymetricLength(state => Number(value))\n  }\n\n  const handleASymetricLength = ({ target: { value } }) => {\n    setASymetricLength(state => Number(value))\n  }\n\n  const validate = (schema, value) => {\n    try {\n      schema.validateSync(value)\n      return {\n        valid: true,\n        error: ''\n      }\n    } catch (e) {\n      return {\n        valid: false,\n        error: e.message\n      }\n    }\n  }\n\n  const handleArgsChange = ({ target: { value: rawValue } }) => {\n    const res = rawValue\n      .split(',')\n      .map(v => v.trim())\n      .map(v => v ? !isNaN(v) ? Number(v.trim()) : v : v)\n\n    const { error, valid } = validate(schema, res)\n\n    setArrayError(error)\n    onValidArgs(valid)\n\n    setArgsArra(res)\n    onArgsChange(res)\n  }\n\n  const handleGenArrChange = (length, type) => {\n    const args = type === 'symetric' ? getSymmetricArr(length).result : getAsymmetricArr(length)\n    const { error, valid } = validate(schema, args)\n    setArgsArra(args)\n    onValidArgs(valid)\n    onArgsChange(args)\n    setArrayError(error)\n  }\n\n  const handleChangeFunctions = ids => {\n    onChangeFunctions(ids)\n    setFunsIds(_ => ids)\n  }\n\n  useEffect(() => {\n    const { error, valid } = validate(schema, argsArray)\n    onArgsChange(argsArray)\n    onValidArgs(valid)\n    setArrayError(error)\n    // eslint-disable-next-line\n  }, [])\n\n  return (\n    <div>\n      <Header as='h3'>Settings</Header>\n      <Form>\n        <Form.Group widths='equal'>\n\n          <Form.Field >\n            <label>Delay</label>\n            <Input\n              disabled={disabled}\n              onChange={handleChangeInput}\n              value={delay}\n              name=\"delay\"\n              type=\"number\"\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>In row</label>\n            <Input\n              disabled={disabled}\n              onChange={handleChangeInput}\n              value={inRow}\n              name=\"inRow\"\n              type=\"number\"\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Loops</label>\n            <Input\n              disabled={disabled}\n              onChange={handleChangeInput}\n              value={loops}\n              name=\"loops\"\n              type=\"number\"\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Iterations</label>\n            <Input\n              disabled={disabled}\n              onChange={handleChangeInput}\n              value={iteration}\n              name=\"iteration\"\n              type=\"number\"\n            />\n          </Form.Field>\n\n        </Form.Group>\n\n        <Form.Field>\n          <Checkbox\n            disabled={disabled}\n            onChange={handleChangeCheckbox.bind(null, 'printToConsole', !printToConsole)}\n            label='print to console'\n            checked={printToConsole}\n          />\n        </Form.Field>\n      </Form>\n\n      <br />\n      <div>\n        <Header as='h3'>Functions</Header>\n        <Dropdown\n          onChange={(e, d) => handleChangeFunctions(d.value)}\n          placeholder='Functions'\n          fluid multiple selection options={fnOptions}\n        />\n        <br/>\n        {!funsIds.length && <div className=\"branchmark__message warning\">\n          There is not functions yet\n        </div>}\n      </div>\n      <br />\n      <div>\n        <Header as='h3'>Arguments</Header>\n        <Input\n          error={!!arrayError}\n          fluid\n          disabled={disabled}\n          onChange={handleArgsChange}\n          value={argsArray.join(',')}\n          name=\"args\"\n          type=\"text\"\n        />\n        {!!arrayError && <Message negative>\n          <p>{arrayError}</p>\n        </Message>}\n        <br />\n        <br />\n        <Input\n          min=\"0\"\n          disabled={disabled}\n          onChange={handleSymetricLength}\n          value={symetricLength}\n          name=\"symetricLength\"\n          type=\"number\"\n        /> {' '} {' '}\n        <Button\n          disabled={disabled}\n          onClick={handleGenArrChange.bind(null, symetricLength, 'symetric')}\n        >Gen symetric array</Button>\n        <br />\n        <br />\n        <Input\n          min=\"0\"\n          disabled={disabled}\n          onChange={handleASymetricLength}\n          value={asymetricLength}\n          name=\"asymetricLength\"\n          type=\"number\"\n        /> {' '}{' '}\n        <Button\n          disabled={disabled}\n          onClick={handleGenArrChange.bind(null, asymetricLength, 'asymetric')}\n        >Gen asymetric array</Button>\n      </div>\n    </div>\n  )\n}\n\nexport default ControlPanel\n","import './line/line'\n\nimport * as yup from 'yup'\n\nimport React, { useState } from 'react';\nimport { findLine, findLine2 } from './line/line'\n\nimport Benchmark from './components/Benchmark/Benchmark'\nimport { Container } from 'semantic-ui-react';\nimport ControlPanel from './components/ControlPanel/ControlPanel'\nimport { parseParams } from './components/Benchmark/utils';\n\nconst initialArguments = {\n  'findLine': [1, 2, 3]\n}\n\nconst schemaValidators = {\n  'findLine': yup.array().of(yup.number().min(-100).max(100).integer())\n}\n\nconst functionsOptions = {\n  'uniqe-id-1': {\n    fn: findLine,\n    name: findLine.sourceName,\n    id: 'uniqe-id-1',\n    type: 'findLine',\n  },\n  'uniqe-id-2': {\n    fn: findLine2,\n    name: findLine2.sourceName,\n    id: 'uniqe-id-2',\n    type: 'findLine',\n  }\n}\n\n/*\n  optimize function\n  - history and filter(with comparision result)\n  - add more functions and abillity to change \n  - able to chose optional actions(get array etc. by type of function)\n  - 5% difference is OK\n*/\n\nfunction App() {\n  const [panelState, setPanelState] = useState({\n    delay: 500,\n    inRow: 1000,\n    loops: 100,\n    iteration: 1,\n    printToConsole: true,\n    disabled: false,\n    initialArgs: initialArguments['findLine'],\n    functions: Object.keys(functionsOptions).map(id => functionsOptions[id]),\n    schemaValidator: schemaValidators['findLine']\n  })\n\n  const [appState, setAppState] = useState({\n    // history: [],\n    args: null,\n    validArgs: false,\n    functions: []\n  })\n\n  const { args, validArgs, functions } = appState\n\n  const { delay, inRow, loops, iteration, printToConsole } = panelState\n\n  const handleChangePanelState = (name, value) => {\n    setPanelState(state => {\n      return {\n        ...state,\n        [name]: value\n      }\n    })\n  }\n\n  const handleOnStart = () => {\n    setPanelState(state => ({\n      ...state,\n      disabled: true\n    }))\n  }\n\n  const handleOnEnd = (data) => {\n    setPanelState(state => ({\n      ...state,\n      disabled: false\n    }))\n\n    // setAppState(state => ({\n    //   ...state,\n    //   history: [...state.history, ...data.items]\n    // }))\n  }\n\n  const handleArgsChange = (args) => {\n    setAppState(state => ({\n      ...state,\n      args\n    }))\n  }\n\n  const handleValidArgs = value => {\n    setAppState(state => ({\n      ...state,\n      validArgs: value\n    }))\n  }\n\n  const handleChangeFunctions = ids => {\n    ids = ids.map(parseParams)\n    const functions = ids.map(({ id }) => functionsOptions[id].fn)\n\n    setAppState(prevState => ({\n      ...prevState,\n      functions\n    }))\n  }\n\n  return (\n    <div>\n      <br />\n      <Container>\n        <ControlPanel\n          onArgsChange={handleArgsChange}\n          onChange={handleChangePanelState}\n          state={panelState}\n          onValidArgs={handleValidArgs}\n          onChangeFunctions={handleChangeFunctions}\n        />\n\n        <br />\n        <br />\n        <br />\n\n        <Benchmark\n          disable={!validArgs || !functions.length}\n          onStart={handleOnStart}\n          onEnd={handleOnEnd}\n          functions={functions}\n          args={[args]}\n\n          printToConsole={printToConsole}\n          loops={loops}\n          inRow={inRow}\n          iteration={iteration}\n          delay={delay}\n        />\n\n        <br />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import './index.css';\n// import * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}