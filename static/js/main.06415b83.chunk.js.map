{"version":3,"sources":["line/line.js","components/Benchmark/utils.js","components/Benchmark/Benchmark.js","line/utils.js","components/ControlPanel/ControlPanel.js","App.js","index.js"],"names":["findLine","arr","sorted","slice","sort","a","b","arrLength","length","isOdd","sliceLength","leftSlice","reverse","rightSlice","oddElement","center","isOddMatchCenter","res","map","elem","index","Math","abs","every","result","sourceName","bench","f","inRow","loops","results","start","Date","now","i","apply","arguments","push","time","createItems","functions","args","printToConsole","items","name","func","count","date","serial","run","cb","this","print","console","log","repeat","getAverage","sum","done","max","min","persent","parseInt","average","printDone","printStart","iteration","toLocaleString","forEach","item","createDataSet","labels","Array","from","e","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","data","Benchmark","delay","disable","onStart","onEnd","useState","inProgress","state","setState","useEffect","handleOnStart","setResult","prevState","handleOnEnd","settings","startBench","setTimeout","undefined","className","Button","loading","disabled","onClick","key","width","height","Message","getRandom","floor","random","mirrorArr","schema","yup","of","integer","ControlPanel","initialArgs","onValidArgs","onArgsChange","onChange","handleChangeInput","target","value","Number","symetricLength","setSymetricLength","asymetricLength","setASymetricLength","argsArray","setArgsArra","arrayError","setArrayError","validate","validateSync","valid","error","message","handleGenArrChange","type","Error","halfLength","half","_","edgeElement","lastHalf","getSymmetricArr","getAsymmetricArr","Header","as","Form","Group","widths","Field","Input","Checkbox","bind","checked","fluid","split","v","trim","isNaN","join","negative","App","panelState","setPanelState","history","validArgs","appState","setAppState","Container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06415b83.chunk.js","sourcesContent":["// import { getAsymmetricArr, getSymmetricArr } from \"./utils\";\n\n// const sourceSimetredEven = [5, -5, 10, -10];\n// const sourceSimetredOdd = [-10, -5, 0, 5, 10];\n// const sourceNotSimetredEven = [-10, -5, 5, 11];\n// const sourceNotSimetredOdd = [22, -10, -5, 0, 5, 11, 13];\n\nexport function findLine(arr = []) {\n  const sorted = arr.slice().sort((a, b) => a - b);\n  const arrLength = sorted.length;\n  const isOdd = arrLength % 2 !== 0;\n  // console.log(\"sorted\", sorted);\n  const sliceLength = isOdd ? (arrLength - 1) / 2 : arrLength / 2;\n  const leftSlice = sorted.slice(0, sliceLength).reverse();\n  const rightSlice = sorted.slice(isOdd ? sliceLength + 1 : sliceLength);\n  const oddElement = isOdd ? sorted[sliceLength] : null;\n  const center = (rightSlice[0] - leftSlice[0]) / 2 + leftSlice[0];\n  const isOddMatchCenter = oddElement === center;\n  \n  const res = rightSlice\n  .map((elem, index) => {\n    return Math.abs(center - elem) === Math.abs(leftSlice[index] - center);\n  })\n  .every(elem => !!elem);\n  \n  // console.log(\"leftSlice\", leftSlice);\n  // console.log(\"rightSlice\", rightSlice);\n  // console.log(\"oddElement\", oddElement);\n  // console.log(\"center\", center);\n  // console.log(\"res\", res);\n  // console.log(\"===\".repeat(20));\n\n  // const res = res.every(elem => !!elem)\n  const result = isOdd ? (isOddMatchCenter ? res : false) : res;\n\n  return {\n    center,\n    isOdd,\n    oddElement,\n    isOddMatchCenter: isOdd ? isOddMatchCenter : null,\n    result,\n    arr\n  };\n};\n\nfindLine.sourceName = 'findLine'\n\n// console.log(findLine([-6, 0, 4, 8, 14]));\n// console.log(findLine([1, 2, 4]));\n// console.log(findLine([-2, 7, 16]));\n\n// console.log(\"===\".repeat(20));\n// console.log('Symmetric');\n\n// console.log(findLine(getSymmetricArr(7).result));\n// console.log(findLine(getSymmetricArr(3).result));\n// console.log(findLine(getSymmetricArr(10).result));\n// console.log(findLine(getSymmetricArr(4).result));\n// console.log(findLine(getSymmetricArr(16).result));\n// console.log(findLine(getSymmetricArr(25).result));\n\n// console.log(\"===\".repeat(20));\n// console.log('Asymmetric');\n// console.log(getAsymmetricArr());\n\n\n// console.log(findLine(getAsymmetricArr(7)));\n// console.log(findLine(getAsymmetricArr(3)));\n// console.log(findLine(getAsymmetricArr(10)));\n// console.log(findLine(getAsymmetricArr(4)));\n// console.log(findLine(getAsymmetricArr(16)));\n// console.log(findLine(getAsymmetricArr(25)));\n\n","export function bench(f, inRow, loops) {\n  return function () {\n    const results = []\n    const start = Date.now();\n\n    for (let i = 0; i < loops; i++) {\n      for (let i = 0; i < inRow; i++) {\n        const result = f.apply(null, arguments[0]);\n        results.push(result)\n      }\n    }\n\n    return {\n      results,\n      time: Date.now() - start\n    };\n  }\n}\n\nexport function createItems(\n  functions,\n  inRow,\n  loops,\n  args,\n  printToConsole = false\n) {\n  const items = []\n  for (let i = 0; i < functions.length; i++) {\n    // console.log('fun',functions[i].sourceName )\n    items.push({\n      name: functions[i].sourceName,\n      func: bench(functions[i], inRow, loops),\n      time: 0,\n      count: [],\n      date: [],\n      results: [],\n      serial: i,\n      run: function (cb) {\n        const { time, results } = this.func(args)\n\n        this.time = time;\n        this.count.push(time)\n        this.date.push(Date.now())\n        this.results = results\n        printToConsole && this.print();\n        cb && cb({\n          time,\n          name: this.name,\n          results\n        })\n      },\n      print: function () {\n        console.log(`Function \"${this.name}\" - time: ${this.time} ms`);\n        console.log('Results: ', this.results)\n        console.log('- - '.repeat(15))\n      },\n      getAverage: function () {\n        let sum = 0;\n\n        for (let i = 0; i < this.count.length; i++) {\n          sum += this.count[i];\n        }\n\n        return sum / this.count.length;\n      },\n      done: function () {\n        const max = Math.max(...this.count)\n        const min = Math.min(...this.count)\n        const persent = parseInt(100 - (min / max * 100))\n        return {\n          max,\n          min,\n          average: this.getAverage(),\n          persent\n        }\n      },\n      printDone: function () {\n        let done = this.done();\n\n        console.log(this.name\n          + \" = max time \" + done.max\n          + \" / mim time \" + done.min\n          + \" / average \" + done.average\n          + \" / persent \" + done.persent\n        )\n      },\n    });\n  }\n\n  return items\n}\n\nexport const printStart = (inRow, loops, iteration) => {\n  console.log('='.repeat(30))\n  console.log(`Start Benchmark ${new Date().toLocaleString()}`)\n  console.log(`Settings: inRow - ${inRow}, loops - ${loops}, iteration - ${iteration}`)\n  console.log('='.repeat(30))\n}\n\nexport const printDone = (items) => {\n  console.log('='.repeat(30))\n  console.log(`End Benchmark ${new Date().toLocaleString()}`);\n  console.log('='.repeat(30))\n  items.forEach((item) => item.printDone());\n}\n\nexport const createDataSet = items => {\n  return items.map(item => ({\n    labels: Array.from({ length: item.count.length }).map((e, i) => i + 1),\n    datasets: [\n      {\n        label: item.name,\n        backgroundColor: 'rgba(255,99,132,0.2)',\n        borderColor: 'rgba(255,99,132,1)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n        hoverBorderColor: 'rgba(255,99,132,1)',\n        data: item.count\n      }\n    ]\n  }))\n}","import './Benchmark.css'\n\nimport { Button, Message } from 'semantic-ui-react'\nimport React, { useEffect, useState } from 'react'\nimport { createDataSet, createItems, printDone, printStart } from './utils'\n\nimport { Bar } from 'react-chartjs-2'\n\nconst Benchmark = ({\n  args,\n  delay = 500,\n  functions,\n  inRow = 1000,\n  iteration = 1,\n  loops = 100,\n  printToConsole = false,\n  disable,\n  onStart = () => { },\n  onEnd = () => { }\n} = {}) => {\n\n  const [state, setState] = useState({\n    inProgress: false,\n    result: null\n  })\n\n  const { inProgress, result } = state\n\n  useEffect(() => {\n    result && console.log('result', result)\n  }, [result])\n\n  const items = createItems(\n    functions,\n    inRow,\n    loops,\n    args,\n    printToConsole\n  )\n\n  const handleOnStart = () => {\n    onStart()\n    setResult(null)\n    printToConsole && printStart(inRow, loops, iteration)\n    setState(prevState => {\n      return {\n        ...prevState,\n        inProgress: true,\n      };\n    });\n  }\n\n  const handleOnEnd = () => {\n    onEnd({\n      items: items.map(item => ({\n        ...item,\n        settings: {\n          args,\n          delay,\n          inRow,\n          iteration,\n          loops,\n          printToConsole\n        }\n      }))\n    })\n    printToConsole && printDone(items)\n    setState(prevState => {\n      return {\n        ...prevState,\n        inProgress: false,\n        result: createDataSet(items)\n      };\n    });\n  }\n\n  const setResult = result => {\n    setState(prevState => ({\n      ...prevState,\n      result\n    }))\n  }\n\n  const start = () => {\n    for (let i = 0; i < items.length; i++) {\n      items[i].run();\n    }\n  }\n\n  const startBench = () => {\n    handleOnStart()\n\n    setTimeout(start, 0);\n\n    setTimeout(() => {\n      if (iteration > 1) {\n        iteration--;\n        setTimeout(function time() {\n          start();\n          iteration--;\n          if (iteration > 0) {\n            setTimeout(time, delay)\n          } else {\n            handleOnEnd()\n          }\n        }, delay);\n      } else {\n        handleOnEnd()\n      }\n    }, 100)\n  }\n\n  return (\n    <div>\n      <div>\n        {(functions === undefined || functions.length === 0) && <div className=\"branchmark__message warning\">\n          there is not functions yet\n        </div>}\n\n        <Button\n          loading={inProgress}\n          disabled={inProgress || disable}\n          onClick={startBench}\n        >Start</Button>\n\n        {result &&\n          result.map((data, i) =>\n            <Bar\n              key={i}\n              data={data}\n              width={100}\n              height={50}\n            />\n          )}\n\n        {!result && !inProgress &&\n          <Message>\n            <p>\n              No result yet.\n            </p>\n          </Message>}\n      </div>\n    </div>\n  )\n}\n\nexport default Benchmark\n","export const getRandom = (min, max) =>\n  min + Math.floor(Math.random() * (max + 1 - min));\n\nexport const mirrorArr = (arr, center) => {\n  return arr\n    .slice()\n    .reverse()\n    .map(elem => {\n      const step = center - elem;\n      // console.log(\"step\", step);\n      return center + step;\n    });\n};\n\nexport const getSymmetricArr = (length = 10, { min = -50, max = 50 } = {}) => {\n  if (length > 100) {\n    throw new Error(\"Length must be less or equal to 100\");\n  }\n\n  const isOdd = length % 2 !== 0;\n  const halfLength = isOdd ? (length - 1) / 2 : length / 2;\n  // const half = [-32, -25, -23, -7, -2];\n  const half = Array.from({ length: halfLength })\n    .map(_ => getRandom(min, max / 2))\n    .sort((a, b) => a - b);\n  const edgeElement = half[halfLength - 1];\n  const center = getRandom(edgeElement + 1, edgeElement + 9);\n  const lastHalf = mirrorArr(half, center);\n  const result = [...half, ...(isOdd ? [center] : []), ...lastHalf];\n\n  // console.log(\"half\", half);\n  // console.log(\"center\", center);\n  // console.log(\"lastHalf\", lastHalf);\n  return {\n    result,\n    center\n  };\n};\n\nexport const getAsymmetricArr = (length =10, { min = -50, max = 50 } ={}) => \n  Array.from({length}).map(_ => getRandom(min, max))\n","import * as yup from 'yup'\n\nimport { Button, Checkbox, Form, Header, Input, Message } from 'semantic-ui-react'\nimport React, { useEffect, useState } from 'react'\nimport { getAsymmetricArr, getSymmetricArr } from '../../line/utils'\n\nconst schema = yup.array()\n  .of(yup.number().min(-100).max(100).integer())\n\nconst ControlPanel = ({\n  state: {\n    delay,\n    inRow,\n    loops,\n    iteration,\n    printToConsole,\n    disabled,\n    initialArgs\n  },\n  onValidArgs,\n  onArgsChange,\n  onChange\n}) => {\n  const handleChangeInput = ({ target: { name, value } }) => {\n    onChange(name, Number(value))\n  }\n\n  const handleChangeCheckbox = (name, value) => {\n    onChange(name, value)\n  }\n\n  const [symetricLength, setSymetricLength] = useState(10)\n  const [asymetricLength, setASymetricLength] = useState(10)\n  const [argsArray, setArgsArra] = useState(initialArgs)\n  const [arrayError, setArrayError] = useState('')\n\n  const handleSymetricLength = ({ target: { value } }) => {\n    setSymetricLength(state => Number(value))\n  }\n\n  const handleASymetricLength = ({ target: { value } }) => {\n    setASymetricLength(state => Number(value))\n  }\n\n  const validate = (schema, value) => {\n    try {\n      schema.validateSync(value)\n      return {\n        valid: true,\n        error: ''\n      }\n    } catch (e) {\n      return {\n        valid: false,\n        error: e.message\n      }\n    }\n  }\n\n  const handleArgsChange = ({ target: { value: rawValue } }) => {\n    const res = rawValue\n      .split(',')\n      .map(v => v.trim())\n      .map(v => v ? !isNaN(v) ? Number(v.trim()) : v : v)\n\n    const {error, valid} = validate(schema, res)\n\n    setArrayError(error)\n    onValidArgs(valid)\n\n    setArgsArra(res)\n    onArgsChange(res)\n  }\n\n  const handleGenArrChange = (length, type) => {\n    const args = type === 'symetric' ? getSymmetricArr(length).result : getAsymmetricArr(length)\n    const {error, valid} = validate(schema, args)\n    setArgsArra(args)\n    onValidArgs(valid)\n    onArgsChange(args)\n    setArrayError(error)\n  }\n\n  // const handleASymetricArrChange = length => {\n  //   const args = getAsymmetricArr(length)\n  //   const {error, valid} = validate(schema, args)\n  //   setArgsArra(args)\n  //   onValidArgs(valid)\n  //   onArgsChange(args)\n  //   setArrayError(error)\n  // }\n  useEffect(() => {\n    const {error, valid} = validate(schema, argsArray)\n    onArgsChange(argsArray)\n    onValidArgs(valid)\n    setArrayError(error)\n    // eslint-disable-next-line\n  }, [])\n\n  return (\n    <div>\n      <Header as='h3'>Settings</Header>\n      <Form>\n        <Form.Group widths='equal'>\n\n          <Form.Field >\n            <label>Delay</label>\n            <Input\n              disabled={disabled}\n              onChange={handleChangeInput}\n              value={delay}\n              name=\"delay\"\n              type=\"number\"\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>In row</label>\n            <Input\n              disabled={disabled}\n              onChange={handleChangeInput}\n              value={inRow}\n              name=\"inRow\"\n              type=\"number\"\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Loops</label>\n            <Input\n              disabled={disabled}\n              onChange={handleChangeInput}\n              value={loops}\n              name=\"loops\"\n              type=\"number\"\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Iterations</label>\n            <Input\n              disabled={disabled}\n              onChange={handleChangeInput}\n              value={iteration}\n              name=\"iteration\"\n              type=\"number\"\n            />\n          </Form.Field>\n\n        </Form.Group>\n\n        <Form.Field>\n          <Checkbox\n            disabled={disabled}\n            onChange={handleChangeCheckbox.bind(null, 'printToConsole', !printToConsole)}\n            label='print to console'\n            checked={printToConsole}\n          />\n        </Form.Field>\n      </Form>\n\n      <div>\n        <br />\n        <Header as='h3'>Arguments</Header>\n        <Input\n          error={!!arrayError}\n          fluid\n          disabled={disabled}\n          onChange={handleArgsChange}\n          value={argsArray.join(',')}\n          name=\"args\"\n          type=\"text\"\n        />\n        {!!arrayError && <Message negative>\n          <p>{arrayError}</p>\n        </Message>}\n        <br />\n        <br />\n        <Input\n          min=\"0\"\n          disabled={disabled}\n          onChange={handleSymetricLength}\n          value={symetricLength}\n          name=\"symetricLength\"\n          type=\"number\"\n        /> {' '} {' '}\n        <Button\n          disabled={disabled}\n          onClick={handleGenArrChange.bind(null, symetricLength, 'symetric')}\n        >Gen symetric array</Button>\n        <br />\n        <br />\n        <Input\n          min=\"0\"\n          disabled={disabled}\n          onChange={handleASymetricLength}\n          value={asymetricLength}\n          name=\"asymetricLength\"\n          type=\"number\"\n        /> {' '}{' '}\n        <Button\n          disabled={disabled}\n          onClick={handleGenArrChange.bind(null, asymetricLength, 'asymetric')}\n        >Gen asymetric array</Button>\n      </div>\n    </div>\n  )\n}\n\nexport default ControlPanel\n","import './line/line'\n\nimport React, { useState } from 'react';\n\nimport Benchmark from './components/Benchmark/Benchmark'\nimport { Container } from 'semantic-ui-react';\nimport ControlPanel from './components/ControlPanel/ControlPanel'\nimport { findLine } from './line/line'\n\n// const functionsOptions = [\n//   {\n//     fn: findLine,\n//     id: 'someUniqId-11',\n//     type: 'findLine',\n//     // initArgs: 'some initial args',\n//     // accept: [[0]],\n//     // acceptTemplate: 'number[]'\n//   }\n// ]\n\n/*\n  -history and filter\n  Switch between functions and pass options\n  Should be able to change arguments\n    - cheker of types\n*/\n\nfunction App() {\n  const [panelState, setPanelState] = useState({\n    delay: 500,\n    inRow: 1000,\n    loops: 100,\n    iteration: 1,\n    printToConsole: true,\n    disabled: false,\n    initialArgs: [1, 2, 3]\n  })\n\n  const [appState, setAppState] = useState({\n    history: [],\n    args: null,\n    validArgs: false\n  })\n\n  const { args, validArgs } = appState\n\n  const { delay, inRow, loops, iteration, printToConsole } = panelState\n\n  const handleChangePanelState = (name, value) => {\n    setPanelState(state => {\n      return {\n        ...state,\n        [name]: value\n      }\n    })\n  }\n\n  const handleOnStart = () => {\n    setPanelState(state => ({\n      ...state,\n      disabled: true\n    }))\n  }\n\n  const handleOnEnd = (data) => {\n    setPanelState(state => ({\n      ...state,\n      disabled: false\n    }))\n\n    // setAppState(state => ({\n    //   ...state,\n    //   history: [...state.history, ...data.items]\n    // }))\n  }\n\n  const handleArgsChange = (args) => {\n    setAppState(state => ({\n      ...state,\n      args\n    }))\n  }\n\n  const handleValidArgs = value => {\n    setAppState(state => ({\n      ...state,\n      validArgs: value\n    }))\n  }\n\n  return (\n    <div>\n      <br />\n      <Container>\n        <ControlPanel\n          onArgsChange={handleArgsChange}\n          onChange={handleChangePanelState}\n          state={panelState}\n          onValidArgs={handleValidArgs}\n        />\n\n        <br />\n        <br />\n        <br />\n\n        <Benchmark\n          disable={!validArgs}\n          onStart={handleOnStart}\n          onEnd={handleOnEnd}\n          functions={[findLine, findLine]}\n          args={[args]}\n\n          printToConsole={printToConsole}\n          loops={loops}\n          inRow={inRow}\n          iteration={iteration}\n          delay={delay}\n        />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import './index.css';\n// import * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}