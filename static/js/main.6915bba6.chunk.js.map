{"version":3,"sources":["line/line.js","line/utils.js","components/Benchmark/utils.js","components/Benchmark/Benchmark.js","components/ControlPanel/ControlPanel.js","App.js","index.js"],"names":["findLine","arr","sorted","slice","sort","a","b","arrLength","length","isOdd","sliceLength","leftSlice","reverse","rightSlice","oddElement","center","isOddMatchCenter","res","map","elem","index","Math","abs","every","result","getRandom","min","max","floor","random","mirrorArr","getSymmetricArr","Error","halfLength","half","Array","from","_","edgeElement","lastHalf","bench","f","inRow","loops","results","start","Date","now","i","apply","arguments","push","time","createItems","functions","args","printToConsole","items","name","func","count","date","serial","run","cb","this","print","console","log","repeat","getAverage","sum","done","persent","parseInt","average","printDone","printStart","iteration","toLocaleString","forEach","item","createDataSet","labels","e","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","data","Benchmark","delay","onStart","onEnd","useState","inProgress","state","setState","useEffect","handleOnStart","setResult","prevState","handleOnEnd","settings","startBench","setTimeout","undefined","className","Button","loading","disabled","onClick","key","width","height","Message","ControlPanel","onChange","handleChangeInput","target","value","Number","Form","Group","widths","Field","Input","type","Checkbox","bind","checked","App","panelState","setPanelState","history","setAppState","Container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6915bba6.chunk.js","sourcesContent":["// import { getAsymmetricArr, getSymmetricArr } from \"./utils\";\n\n// const sourceSimetredEven = [5, -5, 10, -10];\n// const sourceSimetredOdd = [-10, -5, 0, 5, 10];\n// const sourceNotSimetredEven = [-10, -5, 5, 11];\n// const sourceNotSimetredOdd = [22, -10, -5, 0, 5, 11, 13];\n\nexport const findLine = (arr = []) => {\n  const sorted = arr.slice().sort((a, b) => a - b);\n  const arrLength = sorted.length;\n  const isOdd = arrLength % 2 !== 0;\n  // console.log(\"sorted\", sorted);\n  const sliceLength = isOdd ? (arrLength - 1) / 2 : arrLength / 2;\n  const leftSlice = sorted.slice(0, sliceLength).reverse();\n  const rightSlice = sorted.slice(isOdd ? sliceLength + 1 : sliceLength);\n  const oddElement = isOdd ? sorted[sliceLength] : null;\n  const center = (rightSlice[0] - leftSlice[0]) / 2 + leftSlice[0];\n  const isOddMatchCenter = oddElement === center;\n  \n  const res = rightSlice\n  .map((elem, index) => {\n    return Math.abs(center - elem) === Math.abs(leftSlice[index] - center);\n  })\n  .every(elem => !!elem);\n  \n  // console.log(\"leftSlice\", leftSlice);\n  // console.log(\"rightSlice\", rightSlice);\n  // console.log(\"oddElement\", oddElement);\n  // console.log(\"center\", center);\n  // console.log(\"res\", res);\n  // console.log(\"===\".repeat(20));\n\n  // const res = res.every(elem => !!elem)\n  const result = isOdd ? (isOddMatchCenter ? res : false) : res;\n\n  return {\n    center,\n    isOdd,\n    oddElement,\n    isOddMatchCenter: isOdd ? isOddMatchCenter : null,\n    result,\n    arr\n  };\n};\n// console.log(findLine([-6, 0, 4, 8, 14]));\n// console.log(findLine([1, 2, 4]));\n// console.log(findLine([-2, 7, 16]));\n\n// console.log(\"===\".repeat(20));\n// console.log('Symmetric');\n\n// console.log(findLine(getSymmetricArr(7).result));\n// console.log(findLine(getSymmetricArr(3).result));\n// console.log(findLine(getSymmetricArr(10).result));\n// console.log(findLine(getSymmetricArr(4).result));\n// console.log(findLine(getSymmetricArr(16).result));\n// console.log(findLine(getSymmetricArr(25).result));\n\n// console.log(\"===\".repeat(20));\n// console.log('Asymmetric');\n// console.log(getAsymmetricArr());\n\n\n// console.log(findLine(getAsymmetricArr(7)));\n// console.log(findLine(getAsymmetricArr(3)));\n// console.log(findLine(getAsymmetricArr(10)));\n// console.log(findLine(getAsymmetricArr(4)));\n// console.log(findLine(getAsymmetricArr(16)));\n// console.log(findLine(getAsymmetricArr(25)));\n\n","export const getRandom = (min, max) =>\n  min + Math.floor(Math.random() * (max + 1 - min));\n\nexport const mirrorArr = (arr, center) => {\n  return arr\n    .slice()\n    .reverse()\n    .map(elem => {\n      const step = center - elem;\n      // console.log(\"step\", step);\n      return center + step;\n    });\n};\n\nexport const getSymmetricArr = (length = 10, { min = -50, max = 50 } = {}) => {\n  if (length > 100) {\n    throw new Error(\"Length must be less or equal to 100\");\n  }\n\n  const isOdd = length % 2 !== 0;\n  const halfLength = isOdd ? (length - 1) / 2 : length / 2;\n  // const half = [-32, -25, -23, -7, -2];\n  const half = Array.from({ length: halfLength })\n    .map(_ => getRandom(min, max / 2))\n    .sort((a, b) => a - b);\n  const edgeElement = half[halfLength - 1];\n  const center = getRandom(edgeElement + 1, edgeElement + 9);\n  const lastHalf = mirrorArr(half, center);\n  const result = [...half, ...(isOdd ? [center] : []), ...lastHalf];\n\n  // console.log(\"half\", half);\n  // console.log(\"center\", center);\n  // console.log(\"lastHalf\", lastHalf);\n  return {\n    result,\n    center\n  };\n};\n\nexport const getAsymmetricArr = (length =10, { min = -50, max = 50 } ={}) => \n  Array.from({length}).map(_ => getRandom(min, max))\n","export function bench(f, inRow, loops) {\n  return function () {\n    const results = []\n    const start = Date.now();\n\n    for (let i = 0; i < loops; i++) {\n      for (let i = 0; i < inRow; i++) {\n        const result = f.apply(null, arguments[0]);\n        results.push(result)\n      }\n    }\n\n    return {\n      results,\n      time: Date.now() - start\n    };\n  }\n}\n\nexport function createItems(\n  functions,\n  inRow,\n  loops,\n  args,\n  printToConsole = false\n) {\n  const items = []\n  for (let i = 0; i < functions.length; i++) {\n    items.push({\n      name: functions[i].name,\n      func: bench(functions[i], inRow, loops),\n      time: 0,\n      count: [],\n      date: [],\n      results: [],\n      serial: i,\n      run: function (cb) {\n        const { time, results } = this.func(args)\n\n        this.time = time;\n        this.count.push(time)\n        this.date.push(Date.now())\n        this.results = results\n        printToConsole && this.print();\n        cb && cb({\n          time,\n          name: this.name,\n          results\n        })\n      },\n      print: function () {\n        console.log(`Function \"${this.name}\" - time: ${this.time} ms`);\n        console.log('Results: ', this.results)\n        console.log('- - '.repeat(15))\n      },\n      getAverage: function () {\n        let sum = 0;\n\n        for (let i = 0; i < this.count.length; i++) {\n          sum += this.count[i];\n        }\n\n        return sum / this.count.length;\n      },\n      done: function () {\n        const max = Math.max(...this.count)\n        const min = Math.min(...this.count)\n        const persent = parseInt(100 - (min / max * 100))\n        return {\n          max,\n          min,\n          average: this.getAverage(),\n          persent\n        }\n      },\n      printDone: function () {\n        let done = this.done();\n\n        console.log(this.name\n          + \" = max time \" + done.max\n          + \" / mim time \" + done.min\n          + \" / average \" + done.average\n          + \" / persent \" + done.persent\n        )\n      },\n    });\n  }\n\n  return items\n}\n\nexport const printStart = (inRow, loops, iteration) => {\n  console.log('='.repeat(30))\n  console.log(`Start Benchmark ${new Date().toLocaleString()}`)\n  console.log(`Settings: inRow - ${inRow}, loops - ${loops}, iteration - ${iteration}`)\n  console.log('='.repeat(30))\n}\n\nexport const printDone = (items) => {\n  console.log('='.repeat(30))\n  console.log(`End Benchmark ${new Date().toLocaleString()}`);\n  console.log('='.repeat(30))\n  items.forEach((item) => item.printDone());\n}\n\nexport const createDataSet = items => {\n  return items.map(item => ({\n    labels: Array.from({ length: item.count.length }).map((e, i) => i),\n    datasets: [\n      {\n        label: item.name,\n        backgroundColor: 'rgba(255,99,132,0.2)',\n        borderColor: 'rgba(255,99,132,1)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n        hoverBorderColor: 'rgba(255,99,132,1)',\n        data: item.count\n      }\n    ]\n  }))\n}","import './Benchmark.css'\n\nimport { Button, Message } from 'semantic-ui-react'\nimport React, { useEffect, useState } from 'react'\nimport { createDataSet, createItems, printDone, printStart } from './utils'\n\nimport { Bar } from 'react-chartjs-2'\n\nconst Benchmark = ({\n  args,\n  delay = 500,\n  functions,\n  inRow = 1000,\n  iteration = 1,\n  loops = 100,\n  printToConsole = false,\n  onStart = () => { },\n  onEnd = () => { }\n} = {}) => {\n\n  const [state, setState] = useState({\n    inProgress: false,\n    result: null\n  })\n\n  const { inProgress, result } = state\n\n  useEffect(() => {\n    result && console.log('result', result)\n  }, [result])\n\n  const items = createItems(\n    functions,\n    inRow,\n    loops,\n    args,\n    printToConsole\n  )\n\n  const handleOnStart = () => {\n    onStart()\n    setResult(null)\n    printToConsole && printStart(inRow, loops, iteration)\n    setState(prevState => {\n      return {\n        ...prevState,\n        inProgress: true,\n      };\n    });\n  }\n\n  const handleOnEnd = () => {\n    onEnd({\n      items: items.map(item => ({\n        ...item,\n        settings: {\n          args,\n          delay,\n          inRow,\n          iteration,\n          loops,\n          printToConsole\n        }\n      }))\n    })\n    printToConsole && printDone(items)\n    setState(prevState => {\n      return {\n        ...prevState,\n        inProgress: false,\n        result: createDataSet(items)\n      };\n    });\n  }\n\n  const setResult = result => {\n    setState(prevState => ({\n      ...prevState,\n      result\n    }))\n  }\n\n  const start = () => {\n    for (let i = 0; i < items.length; i++) {\n      items[i].run();\n    }\n  }\n\n  const startBench = () => {\n    handleOnStart()\n\n    setTimeout(start, 0);\n\n    setTimeout(() => {\n      if (iteration > 1) {\n        iteration--;\n        setTimeout(function time() {\n          start();\n          iteration--;\n          if (iteration > 0) {\n            setTimeout(time, delay)\n          } else {\n            handleOnEnd()\n          }\n        }, delay);\n      } else {\n        handleOnEnd()\n      }\n    }, 100)\n  }\n\n  return (\n    <div>\n      <div>\n        {(functions === undefined || functions.length === 0) && <div className=\"branchmark__message warning\">\n          there is not functions yet\n        </div>}\n\n        <Button\n          loading={inProgress}\n          disabled={inProgress}\n          onClick={startBench}\n        >Start</Button>\n\n        {result &&\n          result.map((data, i) =>\n            <Bar\n              key={i}\n              data={data}\n              width={100}\n              height={50}\n            />\n          )}\n\n        {!result && !inProgress &&\n          <Message>\n            <p>\n              No result yet.\n            </p>\n          </Message>}\n      </div>\n    </div>\n  )\n}\n\nexport default Benchmark\n","import { Checkbox, Form, Input } from 'semantic-ui-react'\n\nimport React from 'react'\n\nconst ControlPanel = ({\n  state: {\n    delay,\n    inRow,\n    loops,\n    iteration,\n    printToConsole,\n    disabled\n  },\n  onChange\n}) => {\n  const handleChangeInput = ({ target: { name, value } }) => {\n    onChange(name, Number(value))\n  }\n\n  const handleChangeCheckbox = (name, value) => {\n    onChange(name, value)\n  }\n\n  return (\n    <div>\n      <Form>\n        <Form.Group widths='equal'>\n\n          <Form.Field >\n            <label>Delay</label>\n            <Input\n              disabled={disabled}\n              onChange={handleChangeInput}\n              value={delay}\n              name=\"delay\"\n              type=\"number\"\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>In row</label>\n            <Input\n              disabled={disabled}\n              onChange={handleChangeInput}\n              value={inRow}\n              name=\"inRow\"\n              type=\"number\"\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Loops</label>\n            <Input\n              disabled={disabled}\n              onChange={handleChangeInput}\n              value={loops}\n              name=\"loops\"\n              type=\"number\"\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Iterations</label>\n            <Input\n              disabled={disabled}\n              onChange={handleChangeInput}\n              value={iteration}\n              name=\"iteration\"\n              type=\"number\"\n            />\n          </Form.Field>\n\n        </Form.Group>\n\n        <Form.Field>\n          <Checkbox\n            disabled={disabled}\n            onChange={handleChangeCheckbox.bind(null, 'printToConsole', !printToConsole)}\n            label='print to console'\n            checked={printToConsole}\n          />\n        </Form.Field>\n      </Form>\n    </div>\n  )\n}\n\nexport default ControlPanel\n","import './line/line'\n\nimport React, { useState } from 'react';\nimport { getAsymmetricArr, getSymmetricArr } from './line/utils'\n\nimport Benchmark from './components/Benchmark/Benchmark'\nimport { Container } from 'semantic-ui-react';\nimport ControlPanel from './components/ControlPanel/ControlPanel'\nimport { findLine } from './line/line'\n\nconst functionsOptions = [\n  {\n    fn: findLine,\n    id: 'someUniqId-11',\n    type: 'findLine'\n  }\n]\n\n/* \n  Switch between functions and pass options\n  Save resutl globally\n  Should be able to change arguments\n*/\n\nfunction App() {\n  const [panelState, setPanelState] = useState({\n    delay: 500,\n    inRow: 1000,\n    loops: 100,\n    iteration: 1,\n    printToConsole: true,\n    disabled: false,\n  })\n\n  const [appState, setAppState] = useState({\n    history: []\n  })\n\n  // const { history } = appState\n\n  // console.log(history)\n\n  const { delay, inRow, loops, iteration, printToConsole } = panelState\n\n  const handleChangePanelState = (name, value) => {\n    setPanelState(state => {\n      return {\n        ...state,\n        [name]: value\n      }\n    })\n  }\n\n  const handleOnStart = () => {\n    setPanelState(state => ({\n      ...state,\n      disabled: true\n    }))\n  }\n\n  const handleOnEnd = (data) => {\n    setPanelState(state => ({\n      ...state,\n      disabled: false\n    }))\n\n    setAppState(state => ({\n      ...state,\n      history: [...state.history, ...data.items]\n    }))\n  }\n\n  return (\n    <div>\n      <Container>\n        <ControlPanel\n          onChange={handleChangePanelState}\n          state={panelState}\n        />\n\n        <br />\n\n        <Benchmark\n          onStart={handleOnStart}\n          onEnd={handleOnEnd}\n          functions={[findLine, findLine]}\n          args={[getSymmetricArr(14).result]}\n\n          printToConsole={printToConsole}\n          loops={loops}\n          inRow={inRow}\n          iteration={iteration}\n          delay={delay}\n        />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import './index.css';\n// import * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}