{"version":3,"sources":["line/line.js","components/Benchmark/utils.js","components/Comparision/Comparision.js","components/Result/Result.js","components/Benchmark/Benchmark.js","components/Benchmark/workerSetup.js","components/Benchmark/worker.js","line/utils.js","components/ControlPanel/ControlPanel.js","App.js","index.js"],"names":["findLine","arr","sorted","slice","sort","a","b","arrLength","length","isOdd","sliceLength","leftSlice","reverse","rightSlice","oddElement","center","isOddMatchCenter","res","map","elem","index","Math","abs","every","result","sourceName","findLine2","some","getMax","max","getMin","min","getPersent","parseInt","getAverage","reduce","printStart","inRow","loops","iteration","console","log","repeat","Date","toLocaleString","printDoneItem","item","count","persent","average","name","printDone","items","forEach","createDataSet","labels","Array","from","e","i","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","data","parseParams","params","split","id","type","Comparision","averages","marked","best","normal","warn","percent","mark","setLevelMark","Segment","Message","color","key","Result","useState","open","setOpen","Accordion","Title","active","onClick","Icon","Content","benchmarkWorker","worker","code","toString","blob","Blob","Worker","URL","createObjectURL","bench","f","onProgress","results","start","now","apply","arguments","push","time","run","mapResult","date","serial","recreateFnFromString","fn","resFn","Function","self","addEventListener","delay","functions","args","tempCount","amount","onItarationEnd","func","this","createItems","toFixed","postMessage","setTimeout","bind","Benchmark","memo","printToConsole","disable","onStart","onEnd","currentProgress","setCurrentProgress","handleProgress","useCallback","inProgress","state","setState","handleOnEnd","settings","prevState","handleIterationEnd","handleWorkerMessage","useEffect","removeEventListener","handleOnStart","setResult","startBench","Button","loading","disabled","Progress","progress","width","height","getRandom","floor","random","mirrorArr","ControlPanel","initialArgs","schema","schemaValidator","onChangeFunctions","onValidArgs","onArgsChange","onChange","fnOptions","text","value","handleChangeInput","target","Number","symetricLength","setSymetricLength","asymetricLength","setASymetricLength","argsArray","setArgsArra","arrayError","setArrayError","funsIds","setFunsIds","validate","validateSync","valid","error","message","handleGenArrChange","Error","halfLength","half","_","edgeElement","lastHalf","getSymmetricArr","getAsymmetricArr","Header","as","Form","Group","widths","Field","Input","Checkbox","checked","Dropdown","d","ids","placeholder","fluid","multiple","selection","options","className","v","trim","isNaN","join","negative","initialArguments","schemaValidators","yup","of","integer","functionsOptions","App","useMemo","Object","keys","panelState","setPanelState","validArgs","appState","setAppState","handleChangePanelState","handleArgsChange","handleValidArgs","handleChangeFunctions","Container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af581ad7.chunk.js","sourcesContent":["// import { getAsymmetricArr, getSymmetricArr } from \"./utils\";\n\n// const sourceSimetredEven = [5, -5, 10, -10];\n// const sourceSimetredOdd = [-10, -5, 0, 5, 10];\n// const sourceNotSimetredEven = [-10, -5, 5, 11];\n// const sourceNotSimetredOdd = [22, -10, -5, 0, 5, 11, 13];\n\nexport const findLine = (arr = []) => {\n  const sorted = arr.slice().sort((a, b) => a - b);\n  const arrLength = sorted.length;\n  const isOdd = arrLength % 2 !== 0;\n  // console.log(\"sorted\", sorted);\n  const sliceLength = isOdd ? (arrLength - 1) / 2 : arrLength / 2;\n  const leftSlice = sorted.slice(0, sliceLength).reverse();\n  const rightSlice = sorted.slice(isOdd ? sliceLength + 1 : sliceLength);\n  const oddElement = isOdd ? sorted[sliceLength] : null;\n  const center = (rightSlice[0] - leftSlice[0]) / 2 + leftSlice[0];\n  const isOddMatchCenter = oddElement === center;\n\n  const res = rightSlice\n    .map((elem, index) => {\n      return Math.abs(center - elem) === Math.abs(leftSlice[index] - center);\n    })\n    .every(elem => !!elem);\n\n  // console.log(\"leftSlice\", leftSlice);\n  // console.log(\"rightSlice\", rightSlice);\n  // console.log(\"oddElement\", oddElement);\n  // console.log(\"center\", center);\n  // console.log(\"res\", res);\n  // console.log(\"===\".repeat(20));\n\n  // const res = res.every(elem => !!elem)\n  const result = isOdd ? (isOddMatchCenter ? res : false) : res;\n\n  return {\n    center,\n    isOdd,\n    oddElement,\n    isOddMatchCenter: isOdd ? isOddMatchCenter : null,\n    result,\n    arr\n  };\n};\n\nfindLine.sourceName = 'findLine'\n\n/* \n  Legend\n  1. sort arr\n  2. find if there is an odd element\n  3. devide in two parts\n  4. find center\n  5. find if an odd element matches center\n  6. compare elements in the left and the right array\n  7.  \n*/\nexport const findLine2 = (arr = []) => {\n  // console.log(\"arr\", arr);\n  const sorted = arr.slice().sort((a, b) => a - b);\n  const arrLength = sorted.length;\n  const isOdd = arrLength % 2 !== 0;\n  // console.log(\"sorted\", sorted);\n  const sliceLength = isOdd ? (arrLength - 1) / 2 : arrLength / 2;\n  const leftSlice = sorted.slice(0, sliceLength).reverse();\n  const rightSlice = sorted.slice(isOdd ? sliceLength + 1 : sliceLength);\n  const oddElement = isOdd ? sorted[sliceLength] : null;\n  const center = (rightSlice[0] - leftSlice[0]) / 2 + leftSlice[0];\n  const isOddMatchCenter = oddElement === center;\n\n  const res = !rightSlice\n    .some((elem, index) => {\n      return Math.abs(center - elem) !== Math.abs(leftSlice[index] - center);\n    });\n\n  // const res = rightSlice\n  // .map((elem, index) => {\n  //   return Math.abs(center - elem) === Math.abs(leftSlice[index] - center);\n  // })\n  // .every(elem => !!elem);\n\n\n  // console.log(\"leftSlice\", leftSlice);\n  // console.log(\"rightSlice\", rightSlice);\n  // console.log(\"oddElement\", oddElement);\n  // console.log(\"center\", center);\n  // console.log(\"res\", res);\n  // console.log(\"===\".repeat(20));\n\n  // const res = res.every(elem => !!elem)\n  const result = isOdd ? (isOddMatchCenter ? res : false) : res;\n\n  return {\n    center,\n    isOdd,\n    oddElement,\n    isOddMatchCenter: isOdd ? isOddMatchCenter : null,\n    result,\n    arr\n  };\n};\n\nfindLine2.sourceName = 'findLine2'\n\n// console.log(findLine2([-6, 0, 4, 8, 14]));\n// console.log(findLine([1, 2, 4]));\n// console.log(findLine([-2, 7, 16]));\n\n// console.log(\"===\".repeat(20));\n// console.log('Symmetric');\n\n// console.log(findLine(getSymmetricArr(7).result));\n// console.log(findLine(getSymmetricArr(3).result));\n// console.log(findLine(getSymmetricArr(10).result));\n// console.log(findLine(getSymmetricArr(4).result));\n// console.log(findLine(getSymmetricArr(16).result));\n// console.log(findLine(getSymmetricArr(25).result));\n\n// console.log(\"===\".repeat(20));\n// console.log('Asymmetric');\n// console.log(getAsymmetricArr());\n\n\n// console.log(findLine(getAsymmetricArr(7)));\n// console.log(findLine(getAsymmetricArr(3)));\n// console.log(findLine(getAsymmetricArr(10)));\n// console.log(findLine(getAsymmetricArr(4)));\n// console.log(findLine(getAsymmetricArr(16)));\n// console.log(findLine(getAsymmetricArr(25)));\n\n","export const getMax = arr => Math.max(...arr)\n\nexport const getMin = arr => Math.min(...arr)\n\nexport const getPersent = arr => parseInt(100 - (getMin(arr) / getMax(arr) * 100))\n\nexport const getAverage = arr => parseInt(arr.reduce((a, b) => a + b, 0) / arr.length)\n\nexport function bench(f, inRow, loops, /* onProgress */) {\n  return function () {\n    const results = []\n    const start = Date.now();\n\n    for (let i = 0; i < loops; i++) {\n      for (let i = 0; i < inRow; i++) {\n        // onProgress && onProgress()\n        const result = f.apply(null, arguments[0]);\n        results.push(result)\n      }\n    }\n\n    return {\n      results,\n      time: Date.now() - start\n    };\n  }\n}\n\nexport function createItems(\n  functions,\n  inRow,\n  loops,\n  args,\n  printToConsole = false,\n  // onProgress\n) {\n  const items = []\n  for (let i = 0; i < functions.length; i++) {\n    items.push({\n      name: functions[i].sourceName,\n      func: bench(functions[i], inRow, loops),\n      time: 0,\n      count: [],\n      date: [],\n      results: [],\n      serial: i,\n      run: function (done) {\n        const { time, results } = this.func(args)\n\n        this.time = time;\n        this.count.push(time)\n        this.date.push(Date.now())\n        this.results = results\n        printToConsole && this.print();\n        done && done({\n          time,\n          name: this.name,\n          results\n        })\n      },\n      print: function () {\n        console.log(`Function \"${this.name}\" - time: ${this.time} ms`);\n        console.log('Results: ', this.results)\n        console.log('- - '.repeat(15))\n      },\n      getAverage: function () {\n        let sum = 0;\n\n        for (let i = 0; i < this.count.length; i++) {\n          sum += this.count[i];\n        }\n\n        return sum / this.count.length;\n      },\n      done: function () {\n        const max = Math.max(...this.count)\n        const min = Math.min(...this.count)\n        const persent = parseInt(100 - (min / max * 100))\n        return {\n          max,\n          min,\n          average: this.getAverage(),\n          persent\n        }\n      },\n      printDone: function () {\n        let done = this.done();\n\n        console.log(this.name\n          + \" = max time \" + done.max\n          + \" / mim time \" + done.min\n          + \" / average \" + done.average\n          + \" / persent \" + done.persent\n        )\n      },\n    });\n  }\n\n  return items\n}\n\nexport const printStart = (inRow, loops, iteration) => {\n  console.log('='.repeat(30))\n  console.log(`Start Benchmark ${new Date().toLocaleString()}`)\n  console.log(`Settings: inRow - ${inRow}, loops - ${loops}, iteration - ${iteration}`)\n  console.log('='.repeat(30))\n}\n\nexport const printDoneItem = item => {\n  const max = getMax(item.count)\n  const min = getMin(item.count)\n  const persent = getPersent(item.count)\n  const average = getAverage(item.count)\n  console.log(item.name\n    + \" = max time \" + max\n    + \" / mim time \" + min\n    + \" / average \" + average\n    + \" / persent \" + persent\n  )\n}\n\nexport const printDone = (items) => {\n  console.log('='.repeat(30))\n  console.log(`End Benchmark ${new Date().toLocaleString()}`);\n  console.log('='.repeat(30))\n  items.forEach(printDoneItem);\n}\n\nexport const createDataSet = items => {\n  return items.map(item => ({\n    labels: Array.from({ length: item.count.length }).map((e, i) => i + 1),\n    datasets: [\n      {\n        label: item.name,\n        backgroundColor: 'rgba(255,99,132,0.2)',\n        borderColor: 'rgba(255,99,132,1)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n        hoverBorderColor: 'rgba(255,99,132,1)',\n        data: item.count\n      }\n    ],\n    item\n  }))\n}\n\nexport const parseParams = params => {\n  const [id, type] = params.split(':')\n  return { id, type }\n}\n\n","import { Message, Segment } from 'semantic-ui-react'\nimport { getAverage, getMin, getPersent } from '../Benchmark/utils'\n\nimport React from 'react'\n\nconst setLevelMark = (items, best, {\n  normal,\n  warn,\n} = {\n    normal: 3,\n    warn: 10,\n  }) => {\n  // console.log('best', best)\n  return items.map(item => {\n    const { average } = item\n    const percent = getPersent([average, best])\n    // console.log('percent', percent)\n    const mark = average === best ? 'green' :\n      (average > best && percent <= normal) ? 'olive' :\n        (percent > normal && percent <= warn) ? 'yellow' : 'red'\n    return {\n      ...item,\n      mark,\n      percent\n    }\n  })\n}\n\nconst Comparision = ({ result }) => {\n  result = result.map(res => ({\n    ...res,\n    average: getAverage(res.item.count)\n  }))\n\n  const averages = result.map(res => res.average)\n  const bestTime = getMin(averages)\n  const marked = setLevelMark(result, bestTime)\n\n  return (\n    <Segment>\n      {marked.slice().sort((a, b) => a.average - b.average).map((res, i) =>\n        <Message color={res.mark} key={i}>\n          {res.item.name} <b>{res.average} ms</b>\n          {' '}\n          {!!res.percent && <b>(+{res.percent}%)</b>}\n        </Message>\n      )}\n    </Segment>\n  )\n}\n\nexport default Comparision\n","import { Accordion, Icon } from 'semantic-ui-react'\nimport React, { useState } from 'react'\nimport { getAverage, getMax, getMin, getPersent } from '../Benchmark/utils'\n\nconst Result = ({ item }) => {\n  const [open, setOpen] = useState(false)\n  const max = getMax(item.count)\n  const min = getMin(item.count)\n  const persent = getPersent(item.count)\n  const average = getAverage(item.count)\n  return (\n    <div>\n      <Accordion>\n        <Accordion.Title\n          active={open}\n          index={0}\n          onClick={() => setOpen(open => !open)}\n        >\n          <Icon name='dropdown' />\n          Show details\n        </Accordion.Title>\n        <Accordion.Content active={open}>\n          <p>\n            Max time: {max} <br />\n            Min time: {min} <br />\n            Average time: {average} <br />\n            Persent: {persent}\n          </p>\n        </Accordion.Content>\n      </Accordion>\n    </div>\n  )\n}\n\nexport default Result\n","import './Benchmark.css'\n\nimport { Button, Message, Progress } from 'semantic-ui-react'\nimport React, { memo, useCallback, useEffect, useState } from 'react'\nimport { createDataSet, printDone, printStart } from './utils'\n\nimport { Bar } from 'react-chartjs-2'\nimport Comparision from '../Comparision/Comparision'\nimport Result from '../Result/Result'\nimport WebWorker from './workerSetup'\nimport worker from './worker'\n\nconst benchmarkWorker = new WebWorker(worker);\n\nconst Benchmark = memo(({\n  args,\n  delay = 500,\n  functions,\n  inRow = 1000,\n  iteration = 1,\n  loops = 100,\n  printToConsole = false,\n  disable,\n  onStart = () => { },\n  onEnd = () => { },\n} = {}) => {\n\n  const [currentProgress, setCurrentProgress] = useState(0)\n\n  const handleProgress = useCallback(({ persent } = {}) => {\n    // console.log('render progress ', persent)\n    setCurrentProgress(persent)\n  }, [])\n\n  const [state, setState] = useState({\n    inProgress: false,\n    result: null\n  })\n\n  const { inProgress, result } = state\n\n  const handleOnEnd = useCallback((items) => {\n    onEnd({\n      items: items.map(item => ({\n        ...item,\n        settings: {\n          args,\n          delay,\n          inRow,\n          iteration,\n          loops,\n          printToConsole\n        }\n      }))\n    })\n    printToConsole && printDone(items)\n    setState(prevState => {\n      return {\n        ...prevState,\n        inProgress: false,\n        result: createDataSet(items)\n      };\n    });\n  }, [args,\n    delay,\n    inRow,\n    iteration,\n    loops,\n    printToConsole,\n    onEnd]\n  )\n\n  const handleIterationEnd = useCallback(({ name, results, time }) => {\n    if (!printToConsole) {\n      return\n    }\n    console.log(`Function \"${name}\" - time: ${time} ms`);\n    console.log('Results: ', results)\n    console.log('- - '.repeat(15))\n  }, [printToConsole])\n\n  const handleWorkerMessage = useCallback(({ data: { type, data } }) => {\n    switch (type) {\n      case 'progress': {\n        return handleProgress(data)\n      }\n      case 'end': {\n        return handleOnEnd(data.items)\n      }\n      case 'iterationEnd': {\n        return handleIterationEnd(data)\n      }\n      default:\n        return null\n    }\n  }, [handleIterationEnd, handleOnEnd, handleProgress])\n\n  useEffect(() => {\n    benchmarkWorker.addEventListener('message', handleWorkerMessage)\n    return () => {\n      benchmarkWorker.removeEventListener('message', handleWorkerMessage)\n    }\n  }, [handleWorkerMessage])\n\n  useEffect(() => {\n    result && console.log('result', result)\n  }, [result])\n\n  const handleOnStart = () => {\n    onStart()\n    setResult(null)\n    printToConsole && printStart(inRow, loops, iteration)\n\n    setState(prevState => {\n      return {\n        ...prevState,\n        inProgress: true,\n      };\n    });\n  }\n\n  const setResult = result => {\n    setState(prevState => ({\n      ...prevState,\n      result\n    }))\n  }\n\n  const startBench = () => {\n    handleOnStart()\n\n    benchmarkWorker.postMessage({\n      type: 'start',\n      iteration,\n      delay,\n      functions: functions.map(f => ({\n        name: f.sourceName,\n        fn: f.toString()\n      })),\n      inRow,\n      loops,\n      args,\n      printToConsole\n    })\n  }\n\n  // console.log('Benchmark rendered')\n\n  return (\n    <div>\n      <div>\n        <Button\n          loading={inProgress}\n          disabled={inProgress || disable}\n          onClick={startBench}\n        >Start</Button>\n        <br />\n        <br />\n        <Progress percent={currentProgress} progress />\n\n        {result &&\n          result.map((data, i) =>\n            <div key={i}>\n              <Bar\n                data={data}\n                width={100}\n                height={50}\n              />\n              <Message>\n                <Result item={data.item} />\n              </Message>\n            </div>\n          )}\n\n        {result && result.length > 1 && <Comparision result={result} />}\n\n        {!result && !inProgress &&\n          <Message>\n            <p>\n              No result yet.\n            </p>\n          </Message>}\n      </div>\n    </div>\n  )\n})\n\nexport default Benchmark\n","export default class WebWorker {\n  constructor(worker) {\n    const code = worker.toString();\n    const blob = new Blob(['(' + code + ')()']);\n    return new Worker(URL.createObjectURL(blob));\n  }\n}\n","export default () => {\n  console.log('worker created.')\n  function bench(f, inRow, loops, onProgress) {\n    return function bench() {\n      const results = []\n      const start = Date.now()\n\n      for (let i = 0; i < loops; i++) {\n        onProgress && onProgress()\n        for (let i = 0; i < inRow; i++) {\n          const result = f.apply(null, arguments)\n          results.push(result)\n        }\n      }\n\n      return {\n        results,\n        time: Date.now() - start\n      };\n    }\n  }\n\n  function createItems(\n    functions,\n    inRow,\n    loops,\n    args,\n    onProgress,\n    onItarationEnd\n  ) {\n    const items = []\n    for (let i = 0; i < functions.length; i++) {\n      items.push({\n        name: functions[i].sourceName,\n        func: bench(functions[i], inRow, loops, onProgress),\n        time: 0,\n        count: [],\n        date: [],\n        results: [],\n        serial: i,\n        run: function () {\n          const { time, results } = this.func(args)\n\n          this.time = time\n          this.count.push(time)\n          this.date.push(Date.now())\n          this.results = results\n          onItarationEnd && onItarationEnd({\n            time, results, name: this.name\n          })\n        }\n      });\n    }\n\n    return items\n  }\n\n  const start = items => {\n    for (let i = 0; i < items.length; i++) {\n      items[i].run();\n    }\n\n    return items\n  }\n\n  const mapResult = items => items.map(({ count, date, name, serial, results }) => ({\n    count, date, name, serial, results\n  }))\n\n  const recreateFnFromString = fn => {\n    // eslint-disable-next-line no-new-func\n    const resFn = new Function('return ' + fn.fn.toString())();\n    resFn.sourceName = fn.name\n    return resFn\n  }\n\n  // eslint-disable-next-line no-restricted-globals\n  self.addEventListener('message', (\n    { data: {\n      iteration, delay, functions, inRow, loops, args\n    } = {} }\n  ) => {\n    functions = functions.map(recreateFnFromString);\n    const intialIteraions = iteration\n    let count = 0\n    let tempCount = 0\n    const amount =  loops * intialIteraions * functions.length\n\n\n    const items = createItems(\n      functions,\n      inRow,\n      loops,\n      args,\n      () => {\n        count++\n        const persent = ((count) / amount * 100).toFixed(0)\n\n        if (persent !== tempCount) {\n          tempCount = persent\n        } else {\n          return\n        }\n        // console.log('count', count);\n        \n        // console.log('persent', persent)\n        // eslint-disable-next-line no-restricted-globals\n        self.postMessage({\n          type: 'progress',\n          data: {\n            amount,\n            count,\n            persent\n          }\n        })\n      },\n      data => {\n        // eslint-disable-next-line no-restricted-globals\n        self.postMessage({\n          type: 'iterationEnd',\n          data\n        })\n      }\n    )\n\n    \n    // console.log('items', items)\n\n    setTimeout(start.bind(null, items), 0);\n\n    setTimeout(() => {\n      if (iteration > 1) {\n        iteration--;\n        setTimeout(function time() {\n          start(items);\n          iteration--;\n          if (iteration > 0) {\n            setTimeout(time, delay)\n          } else {\n            // eslint-disable-next-line no-restricted-globals\n            self.postMessage({\n              type: 'end',\n              data: {\n                items: mapResult(items)\n              }\n            })\n          }\n        }, delay);\n      } else {\n        // eslint-disable-next-line no-restricted-globals\n        self.postMessage({\n          type: 'end',\n          data: {\n            items: mapResult(items)\n          }\n        })\n      }\n    }, 100)\n  })\n}\n","export const getRandom = (min, max) =>\n  min + Math.floor(Math.random() * (max + 1 - min));\n\nexport const mirrorArr = (arr, center) => {\n  return arr\n    .slice()\n    .reverse()\n    .map(elem => {\n      const step = center - elem;\n      // console.log(\"step\", step);\n      return center + step;\n    });\n};\n\nexport const getSymmetricArr = (length = 10, { min = -50, max = 50 } = {}) => {\n  if (length > 100) {\n    throw new Error(\"Length must be less or equal to 100\");\n  }\n\n  const isOdd = length % 2 !== 0;\n  const halfLength = isOdd ? (length - 1) / 2 : length / 2;\n  // const half = [-32, -25, -23, -7, -2];\n  const half = Array.from({ length: halfLength })\n    .map(_ => getRandom(min, max / 2))\n    .sort((a, b) => a - b);\n  const edgeElement = half[halfLength - 1];\n  const center = getRandom(edgeElement + 1, edgeElement + 9);\n  const lastHalf = mirrorArr(half, center);\n  const result = [...half, ...(isOdd ? [center] : []), ...lastHalf];\n\n  // console.log(\"half\", half);\n  // console.log(\"center\", center);\n  // console.log(\"lastHalf\", lastHalf);\n  return {\n    result,\n    center\n  };\n};\n\nexport const getAsymmetricArr = (length =10, { min = -50, max = 50 } ={}) => \n  Array.from({length}).map(_ => getRandom(min, max))\n","import { Button, Checkbox, Dropdown, Form, Header, Input, Message } from 'semantic-ui-react'\nimport React, {memo, useEffect, useState} from 'react'\nimport { getAsymmetricArr, getSymmetricArr } from '../../line/utils'\n\nconst createFunOptions = funs =>\n  funs.map(fn => ({\n    key: fn.id, text: fn.name, value: `${fn.id}:${fn.type}`\n  }))\n\nconst ControlPanel = memo(({\n  state: {\n    delay,\n    inRow,\n    loops,\n    iteration,\n    printToConsole,\n    disabled,\n    initialArgs,\n    functions,\n    schemaValidator: schema\n  },\n  onChangeFunctions,\n  onValidArgs,\n  onArgsChange,\n  onChange\n}) => {\n  const fnOptions = createFunOptions(functions)\n  const handleChangeInput = ({ target: { name, value } }) => {\n    onChange(name, Number(value))\n  }\n\n  const handleChangeCheckbox = (name, value) => {\n    onChange(name, value)\n  }\n\n  const [symetricLength, setSymetricLength] = useState(10)\n  const [asymetricLength, setASymetricLength] = useState(10)\n  const [argsArray, setArgsArra] = useState(initialArgs)\n  const [arrayError, setArrayError] = useState('')\n  const [funsIds, setFunsIds] = useState([])\n\n  const handleSymetricLength = ({ target: { value } }) => {\n    setSymetricLength(state => Number(value))\n  }\n\n  const handleASymetricLength = ({ target: { value } }) => {\n    setASymetricLength(state => Number(value))\n  }\n\n  const validate = (schema, value) => {\n    try {\n      schema.validateSync(value)\n      return {\n        valid: true,\n        error: ''\n      }\n    } catch (e) {\n      return {\n        valid: false,\n        error: e.message\n      }\n    }\n  }\n\n  const handleArgsChange = ({ target: { value: rawValue } }) => {\n    const res = rawValue\n      .split(',')\n      .map(v => v.trim())\n      .map(v => v ? !isNaN(v) ? Number(v.trim()) : v : v)\n\n    const { error, valid } = validate(schema, res)\n\n    setArrayError(error)\n    onValidArgs(valid)\n\n    setArgsArra(res)\n    onArgsChange(res)\n  }\n\n  const handleGenArrChange = (length, type) => {\n    const args = type === 'symetric' ? getSymmetricArr(length).result : getAsymmetricArr(length)\n    const { error, valid } = validate(schema, args)\n    setArgsArra(args)\n    onValidArgs(valid)\n    onArgsChange(args)\n    setArrayError(error)\n  }\n\n  const handleChangeFunctions = ids => {\n    onChangeFunctions(ids)\n    setFunsIds(_ => ids)\n  }\n\n  useEffect(() => {\n    const { error, valid } = validate(schema, argsArray)\n    onArgsChange(argsArray)\n    onValidArgs(valid)\n    setArrayError(error)\n    // eslint-disable-next-line\n  }, [])\n\n  console.log('ControlPanel rendered');\n  \n\n  return (\n    <div>\n      <Header as='h3'>Settings</Header>\n      <Form>\n        <Form.Group widths='equal'>\n\n          <Form.Field >\n            <label>Delay</label>\n            <Input\n              disabled={disabled}\n              onChange={handleChangeInput}\n              value={delay}\n              name=\"delay\"\n              type=\"number\"\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>In row</label>\n            <Input\n              disabled={disabled}\n              onChange={handleChangeInput}\n              value={inRow}\n              name=\"inRow\"\n              type=\"number\"\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Loops</label>\n            <Input\n              disabled={disabled}\n              onChange={handleChangeInput}\n              value={loops}\n              name=\"loops\"\n              type=\"number\"\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Iterations</label>\n            <Input\n              disabled={disabled}\n              onChange={handleChangeInput}\n              value={iteration}\n              name=\"iteration\"\n              type=\"number\"\n            />\n          </Form.Field>\n\n        </Form.Group>\n\n        <Form.Field>\n          <Checkbox\n            disabled={disabled}\n            onChange={handleChangeCheckbox.bind(null, 'printToConsole', !printToConsole)}\n            label='print to console'\n            checked={printToConsole}\n          />\n        </Form.Field>\n      </Form>\n\n      <br />\n      <div>\n        <Header as='h3'>Functions</Header>\n        <Dropdown\n          onChange={(e, d) => handleChangeFunctions(d.value)}\n          placeholder='Functions'\n          fluid multiple selection options={fnOptions}\n        />\n        <br/>\n        {!funsIds.length && <div className=\"branchmark__message warning\">\n          There is not functions yet\n        </div>}\n      </div>\n      <br />\n      <div>\n        <Header as='h3'>Arguments</Header>\n        <Input\n          error={!!arrayError}\n          fluid\n          disabled={disabled}\n          onChange={handleArgsChange}\n          value={argsArray.join(',')}\n          name=\"args\"\n          type=\"text\"\n        />\n        {!!arrayError && <Message negative>\n          <p>{arrayError}</p>\n        </Message>}\n        <br />\n        <br />\n        <Input\n          min=\"0\"\n          disabled={disabled}\n          onChange={handleSymetricLength}\n          value={symetricLength}\n          name=\"symetricLength\"\n          type=\"number\"\n        /> {' '} {' '}\n        <Button\n          disabled={disabled}\n          onClick={handleGenArrChange.bind(null, symetricLength, 'symetric')}\n        >Gen symetric array</Button>\n        <br />\n        <br />\n        <Input\n          min=\"0\"\n          disabled={disabled}\n          onChange={handleASymetricLength}\n          value={asymetricLength}\n          name=\"asymetricLength\"\n          type=\"number\"\n        /> {' '}{' '}\n        <Button\n          disabled={disabled}\n          onClick={handleGenArrChange.bind(null, asymetricLength, 'asymetric')}\n        >Gen asymetric array</Button>\n      </div>\n    </div>\n  )\n})\n\nexport default ControlPanel\n","import './line/line'\n\nimport * as yup from 'yup'\n\nimport { Container, Progress } from 'semantic-ui-react';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { findLine, findLine2 } from './line/line'\n\nimport Benchmark from './components/Benchmark/Benchmark'\nimport ControlPanel from './components/ControlPanel/ControlPanel'\nimport { parseParams } from './components/Benchmark/utils'\n\nconst initialArguments = {\n  'findLine': [-33, -9, 9, 10, 20, 24, 34, 35, 53, 77]\n}\n\nconst schemaValidators = {\n  'findLine': yup.array().of(yup.number().min(-100).max(100).integer())\n}\n\nconst functionsOptions = {\n  'uniqe-id-1': {\n    fn: findLine,\n    name: findLine.sourceName,\n    id: 'uniqe-id-1',\n    type: 'findLine',\n  },\n  'uniqe-id-2': {\n    fn: findLine2,\n    name: findLine2.sourceName,\n    id: 'uniqe-id-2',\n    type: 'findLine',\n  }\n}\n\nfunction App() {\n  const [panelState, setPanelState] = useState({\n    delay: 500,\n    inRow: 1000,\n    loops: 100,\n    iteration: 10,\n    printToConsole: true,\n    disabled: false,\n    initialArgs: initialArguments['findLine'],\n    functions:  useMemo(() => Object.keys(functionsOptions).map(id => functionsOptions[id]), []),\n    // functions: Object.keys(functionsOptions).map(id => functionsOptions[id]),\n    schemaValidator: schemaValidators['findLine']\n  })\n\n  const [appState, setAppState] = useState({\n    args: null,\n    validArgs: false,\n    functions: []\n  })\n\n  const { args, validArgs, functions } = appState\n\n  const { delay, inRow, loops, iteration, printToConsole } = panelState\n\n  const handleChangePanelState = useCallback((name, value) => {\n    setPanelState(state => {\n      return {\n        ...state,\n        [name]: value\n      }\n    })\n  }, [])\n\n  const handleOnStart = useCallback(() => {\n    setPanelState(state => ({\n      ...state,\n      // disabled: true\n    }))\n  }, [])\n\n  const handleOnEnd = useCallback((data) => {\n    setPanelState(state => ({\n      ...state,\n      disabled: false\n    }))\n  }, [])\n\n  const handleArgsChange = useCallback((args) => {\n    setAppState(state => ({\n      ...state,\n      args\n    }))\n  }, [])\n\n  const handleValidArgs = useCallback((value) => {\n    setAppState(state => ({\n      ...state,\n      validArgs: value\n    }))\n  }, [])\n\n  const handleChangeFunctions = useCallback((ids) => {\n    ids = ids.map(parseParams)\n    const functions = ids.map(({ id }) => functionsOptions[id].fn)\n\n    setAppState(prevState => ({\n      ...prevState,\n      functions\n    }))\n  }, [])\n\n  console.log('App rendered')\n\n  return (\n    <div>\n      <br />\n      <Container>\n        <ControlPanel\n          onArgsChange={handleArgsChange}\n          onChange={handleChangePanelState}\n          state={panelState}\n          onValidArgs={handleValidArgs}\n          onChangeFunctions={handleChangeFunctions}\n        />\n\n        <br />\n        <br />\n        <br />\n\n        <Benchmark\n          disable={!validArgs || !functions.length}\n          onStart={handleOnStart}\n          onEnd={handleOnEnd}\n          functions={functions}\n          args={args}\n\n          printToConsole={printToConsole}\n          loops={loops}\n          inRow={inRow}\n          iteration={iteration}\n          delay={delay}\n        />\n\n        <br />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import './index.css';\n// import * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}